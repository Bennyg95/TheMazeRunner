
// ***********************************************************************************
//
// Filename: tile.h
// 
// Description:
//
// Author: Benito Sanchez
//
// ***********************************************************************************
//

#ifndef TILE_H_INCLUDED
#define TILE_H_INCLUDED

#include <string>
using namespace std;

// ###################################################################################
class Tile 	// creates an object Tile
// ###################################################################################
{
	// ###############################################################################
	private:
	// ###############################################################################
		char tile; // character tile
        bool isStart,
             isEnd,
             isWall,
             isKeyLoc,
             isVisited;
        char originDirection;

    // ###############################################################################
	public:
	// ###############################################################################

		// ###########################################################################
		Tile();	// constructor to initialize a tile
		// ###########################################################################
		// 
		// SUMMARY: 
		//		Sets tile to default character
		// PRECONDITION:
		//		None
		// POSTCONDITION
		//		Tile has been initilized to default
		// ###########################################################################

		// ###########################################################################
		char setWall(); // will set the tile to a wall
		// ###########################################################################
		// 
		// SUMMARY:
		//		Sets the tile to wall
		// PRECONDITION:
		//		None
		// POSTCONDITION
		//		Tile has been set to wall
		// ###########################################################################

		// ###########################################################################
		char setPath();	// will set a tile to a path
		// ###########################################################################
		// 
		// SUMMARY:
		//		Sets the tile to a path (empty space)
		// PRECONDITION:
		//		None
		// POSTCONDITION
		//		Tile has been changed to empty space
		// ###########################################################################

		// ###########################################################################
		void setIsStart();
		// ###########################################################################
		// 
		// SUMMARY:
		//		Sets the tile to path and sets the tile to start tile
		// PRECONDITION:
		//		None
		// POSTCONDITION
		//		Tile has been set to path and start tile
		// ###########################################################################

		// ###########################################################################
        void setIsEnd();
        // ###########################################################################
        // 
		// SUMMARY:
		//		Sets tile to path and sets tile to end
		// PRECONDITION:
		//		None
		// POSTCONDITION
		//		Tile has been set to end 
		// ###########################################################################

        // ###########################################################################
        void setIsWall(char tile);
        // ###########################################################################
        // 
		// SUMMARY:
		//		Takes in a tile and sets it to a wall
		// PRECONDITION:
		//		NONE
		// POSTCONDITION
		//		Tile has been set to a wall
		// ###########################################################################

        // ###########################################################################
        void setOriginDirection(char originDirection);
        // ###########################################################################
        // 
		// SUMMARY:
		//		
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
        void setIsKeyLoc(bool isKeyLoc);
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################
        
        // ###########################################################################
        void setIsVisited();
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
        void changeSymbol();
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
		char getTile() const {return tile;}	// returns the value of the tile
		// ###########################################################################
		// 
		// SUMMARY:
		//		Returns the tile character 
		// PRECONDITION:
		//		NONE
		// POSTCONDITION
		//		The tile character has been returned
		// ###########################################################################

		// ###########################################################################
        bool getIsStart()const {return isStart;}
        // ###########################################################################
        // 
		// SUMMARY:
		//		
		// PRECONDITION:
		//		
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
        bool getIsEnd()const {return isEnd;}
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
        bool getIsWall()const {return isWall;}
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
        char getOriginDirection()const {return originDirection;}
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
        bool getIsKeyLoc()const {return isKeyLoc;}
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

        // ###########################################################################
        bool getIsVisited()const {return isVisited;}
        // ###########################################################################
        // 
		// SUMMARY:
		//
		// PRECONDITION:
		//
		// POSTCONDITION
		//
		// ###########################################################################

};

#endif
